#!/bin/sh

# import functions
source ./functions
if [ $? -ne 0 ]; then
    echo "Error: can't source functions, execute the script from $(dirname "$(realpath "$0")")"
    exit 1
fi

# Reproducing:
# - https://patorjk.com/software/taag/#p=display&f=Slant&t=Hyprland
# - echo "Hyprland" | figlet -f slant
echo -e "
${GREEN}    __  __                 __                __
${GREEN}   / / / /_  ______  _____/ /___ _____  ____/ /
${GREEN}  / /_/ / / / / __ \/ ___/ / __ \`/ __ \/ __  / 
${GREEN} / __  / /_/ / /_/ / /  / / /_/ / / / / /_/ /  
${GREEN}/_/ /_/\__, / .___/_/  /_/\__,_/_/ /_/\__,_/   
${GREEN}      /____/_/                                 ${RESET}

# ${YELLOW}Easy Hyprland installer${RESET} #

${WHITE_BOLD}Tip: See installed packages at the top of the script${RESET}
${CYAN}1${RESET}. Base     (${RED}not recommended${RESET}) (only what's needed to run, you will experience issues)
${CYAN}2${RESET}. Minimal  (${GREEN}recommended${RESET})     (all needed dependencies, incl. filebrowser, shell scripts)
${CYAN}3${RESET}. Extended (extra packages, like browser, calculator, office suite and vencord)
${CYAN}4${RESET}. Gaming   (wine, steam, bottles and everything for gaming ready)
"
read -n1 -rep "(1/2/3/4) $: " STAGE

if [[ $STAGE -lt 1 || $STAGE -gt 4 ]]; then 
    echo -e "${RED}Choose a valid option${RESET}"
    exit 1
fi

echo -e "
${GREEN}    ___   __  ______  
${GREEN}   /   | / / / / __ \ 
${GREEN}  / /| |/ / / / /_/ / 
${GREEN} / ___ / /_/ / _, _/  
${GREEN}/_/  |_\____/_/ |_| 

${WHITE_BOLD}Choose your AUR helper ${RESET}
Anything other than yay or paru is not tested and is to be used with caution.
${CYAN}1${RESET}. Yay (${GREEN}recommended${RESET})
${CYAN}2${RESET}. Paru (${GREEN}recommended${RESET})
${CYAN}3${RESET}. Pikaur
${CYAN}4${RESET}. Pakku
${CYAN}5${RESET}. Pacaur
${CYAN}6${RESET}. Trizen
${CYAN}7${RESET}. Aura
${CYAN}8${RESET}. Aurman 
"

read -n1 -rep "(1/2/3/4/5/6/7/8) $: " OVERRIDE_AUR

if [[ $OVERRIDE_AUR -lt 1 || $OVERRIDE_AUR -gt 8 ]]; then 
    echo -e "${RED}Choose a valid option${RESET}"
    exit 1
fi
export OVERRIDE_AUR=${AUR_HELPERS[(($OVERRIDE_AUR - 1))]} # Index with the current value to get string + array offsets

echo -e " 
${GREEN}    __  ___          ___ _____              
${GREEN}   /  |/  /___  ____/ (_) __(_)__  _____         
${GREEN}  / /|_/ / __ \\/ __  / / /_/ / _ \\/ ___/       
${GREEN} / /  / / /_/ / /_/ / / __/ /  __/ /                     
${GREEN}/_/  /_/\____/\__,_/_/_/ /_/\___/_/                      ${RESET} 

${WHITE_BOLD}What Modifier do you want to use in Hyprland?${RESET}
${CYAN}1${RESET}. Alt -> (personally more ${GREEN}comfortable${RESET}, but ${RED}may interfere with some apps${RESET}, namely emacs)
${CYAN}2${RESET}. Win -> (${RED}harder to reach${RESET} than Alt, but ${GREEN}doesn't interfere with apps${RESET})
"
read -n1 -rep "(1/2) $: " MODKEY

if [[ $MODKEY -lt 1 || $MODKEY -gt 2 ]]; then 
    echo -e "${RED}Choose a valid option${RESET}"
    exit 1
fi

[[ "$MODKEY" == "1" ]] && MODKEY="MOD1" # Alt
[[ "$MODKEY" == "2" ]] && MODKEY="MOD4" # Win

#echo -e "
#${GREEN}    __ __                                
#${GREEN}   / //_/__  __  ______ ___  ____ _____  
#${GREEN}  / ,< / _ \/ / / / __ \`__ \/ __ \`/ __ \ 
#${GREEN} / /| /  __/ /_/ / / / / / / /_/ / /_/ / 
#${GREEN}/_/ |_\___/\__, /_/ /_/ /_/\__,_/ .___/  
#${GREEN}          /____/               /_/       ${RESET}
#
#${WHITE_BOLD}Choose a keyboard layout:${RESET}
#${CYAN}1${RESET}. de
#${CYAN}2${RESET}. en
#"
#
#read -n1 -rep "(Enter name of language) $: " KEYMAP
#
echo -e "
${GREEN}   _____     __    __         
${GREEN}  / ___/____/ /___/ /___ ___  
${GREEN}  \__ \/ __  / __  / __ \`__ \ 
${GREEN} ___/ / /_/ / /_/ / / / / / / 
${GREEN}/____/\__,_/\__,_/_/ /_/ /_/  ${RESET}
"
echo -e "\n${WHITE_BOLD}Install sddm? ${RESET}"
read -n1 -rep "(y/n) $: " SDDM_INSTALL

if [[ $SDDM_INSTALL == "y" || $SDDM_INSTALL == "Y" || $SDDM_INSTALL == "" ]]; then
    echo -e "${WHITE_BOLD}\nInstall custom adaptive sddm? [https://github.com/POP303U/rose-pine-sddm]${RESET}"
    read -n1 -rep "(y/n) $: " SDDM_CUSTOM_INSTALL
fi

echo -e "
${GREEN}    ____             __ 
${GREEN}   / __ \__  _______/ /_
${GREEN}  / /_/ / / / / ___/ __/
${GREEN} / _, _/ /_/ (__  ) /_  
${GREEN}/_/ |_|\__,_/____/\__/  ${RESET}
"
echo -e "${WHITE_BOLD}Install beautiful ls/cat/find -> eza/bat/fd? ${RESET}"
echo -e "${WHITE_BOLD}Preview: ${RESET}"
echo -e "---------------------------------------------------
[4mPermissions[0m  [4mSize[0m [4mUser[0m [4mDate Modified[0m [4mName[0m
[1;34md[33mr[31mw[32mx[0m[33mr[1;90m-[0m[32mx[33mr[1;90m-[0m[32mx[0m      [1;90m-[0m [1;33mpops[0m [34m 3 Feb 15:02[0m  [1;34mconfigs[0m
[1;34md[33mr[31mw[32mx[0m[33mr[1;90m-[0m[32mx[33mr[1;90m-[0m[32mx[0m      [1;90m-[0m [1;33mpops[0m [34m 3 Feb 13:40[0m  [1;34mconfigs_backup[0m
[1;34md[33mr[31mw[32mx[0m[33mr[1;90m-[0m[32mx[33mr[1;90m-[0m[32mx[0m      [1;90m-[0m [1;33mpops[0m [34m25 Jan 16:20[0m  [1;34mdebug[0m
.[1;33mr[31mw[90m-[0m[33mr[1;90m--[0m[33mr[1;90m--[0m  [1;32m1.0Ki[0m [1;33mpops[0m [34m30 Dec  2023[0m  LICENSE
.[1;33mr[31mw[90m-[0m[33mr[1;90m--[0m[33mr[1;90m--[0m  [1;32m2.2Ki[0m [1;33mpops[0m [34m20 Jan 15:56[0m  [1;4;33mREADME.md[0m
[1;34md[33mr[31mw[32mx[0m[33mr[1;90m-[0m[32mx[33mr[1;90m-[0m[32mx[0m      [1;90m-[0m [1;33mpops[0m [34m 3 Feb 15:16[0m  [1;34msetup-hypr[0m
---------------------------------------------------"
read -n1 -rep "(y/n) $: " OPTIONAL_DEPS_RUST

echo -e "
${GREEN}   __  __       
${GREEN}  / /_/ /___  __
${GREEN} / __/ __/ / / /
${GREEN}/ /_/ /_/ /_/ / 
${GREEN}\__/\__/\__, /  
${GREEN}       /____/    ${RESET}
"
echo -e "\n${WHITE_BOLD}Install tty login? ${RESET}"
read -n1 -rep "(y/n) $: " TTY_INSTALL

echo -e "
${GREEN}       __     __    __            __ 
${GREEN}  ____/ /__  / /_  / /___  ____ _/ /_
${GREEN} / __  / _ \/ __ \/ / __ \/ __ \`/ __/
${GREEN}/ /_/ /  __/ /_/ / / /_/ / /_/ / /_  
${GREEN}\__,_/\___/_.___/_/\____/\__,_/\__/  ${RESET}"

echo -e "\n${WHITE_BOLD}Debloat desktop entries? ${RESET}"
echo -e "This is only recommended if you don't use following applications:"

# Reused lol
GENERIC=($(get_yaml_packages de_bloat.yaml generic))
for ENTRY in "${GENERIC[@]}"; do
    echo -e "${CYAN}->${RESET} $ENTRY" 
done

echo -e ""
read -n1 -rep "Remove these generic desktop entries? (y/n) $: " FLAG_REMOVE_GENERIC

QT=($(get_yaml_packages de_bloat.yaml qt))
for ENTRY in "${QT[@]}"; do
    echo -e "${CYAN}->${RESET} $ENTRY" 
done

echo -e ""
read -n1 -rep "Remove these qt desktop entries? (y/n) $: " FLAG_REMOVE_QT

ROFI=($(get_yaml_packages de_bloat.yaml rofi))
for ENTRY in "${ROFI[@]}"; do
    echo -e "${CYAN}->${RESET} $ENTRY" 
done

echo -e ""
read -n1 -rep "Remove these rofi desktop entries? (y/n) $: " FLAG_REMOVE_ROFI
