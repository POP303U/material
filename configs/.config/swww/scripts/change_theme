#!/bin/bash

SWWW_DIR="/home/${USER}/.config/swww"
CURRENT_GTK_FILE="${SWWW_DIR}/current/gtk"
CURRENT_BG_FILE="${SWWW_DIR}/current/name"
CURRENT_THEME_FILE="${SWWW_DIR}/current/theme"
CURRENT_BG="$(cat "$CURRENT_BG_FILE")"
CURRENT_THEME="$(cat "$CURRENT_BG_FILE")"

case "$1" in
    "dawn")
        export THEME_TYPE_SHORT="dawn"
        export CURRENT_BG="dawn-abstract_moon.png"
        export CURRENT_THEME="rose-pine-dawn"
        export LIGHT="light"
        echo "$CURRENT_BG" > "$CURRENT_BG_FILE"
        echo "$CURRENT_THEME" > "$CURRENT_THEME_FILE"
        ;;
    "moon")
        export THEME_TYPE_SHORT="moon"
        export CURRENT_BG="moon-leafy.png"
        export CURRENT_THEME="rose-pine-moon"
        export LIGHT="dark"
        echo "$CURRENT_BG" > "$CURRENT_BG_FILE"
        echo "$CURRENT_THEME" > "$CURRENT_THEME_FILE"
        ;;
    "pine")
        export THEME_TYPE_SHORT="main"
        export CURRENT_BG="pine-anime_city.png"
        export CURRENT_THEME="rose-pine"
        export LIGHT="dark"
        echo "$CURRENT_BG" > "$CURRENT_BG_FILE"
        echo "$CURRENT_THEME" > "$CURRENT_THEME_FILE"
        ;;
    "gruvbox-dark")
        export THEME_TYPE_SHORT="gruvdark"
        export CURRENT_BG="gruvbox-astro.jpg"
        export CURRENT_THEME="gruvbox-dark"
        export LIGHT="dark"
        echo "$CURRENT_BG" > "$CURRENT_BG_FILE"
        echo "$CURRENT_THEME" > "$CURRENT_THEME_FILE"
        ;;
    "gruvbox-light")
        export THEME_TYPE_SHORT="gruvlight"
        export CURRENT_BG="gruvbox-light-fighterjet.png"
        export CURRENT_THEME="gruvbox-light"
        export LIGHT="light"
        echo "$CURRENT_BG" > "$CURRENT_BG_FILE"
        echo "$CURRENT_THEME" > "$CURRENT_THEME_FILE"
        ;;
    "catppuccin-mocha")
        export THEME_TYPE_SHORT="catppuccin-mocha"
        export CURRENT_BG="mocha-cat-leaves.png"
        export CURRENT_THEME="catppuccin-mocha"
        export LIGHT="dark"
        echo "$CURRENT_BG" > "$CURRENT_BG_FILE"
        echo "$CURRENT_THEME" > "$CURRENT_THEME_FILE"
        ;;
    "catppuccin-latte")
        export THEME_TYPE_SHORT="catppuccin-latte"
        export CURRENT_BG="latte-cloud.png"
        export CURRENT_THEME="catppuccin-latte"
        export LIGHT="light"
        echo "$CURRENT_BG" > "$CURRENT_BG_FILE"
        echo "$CURRENT_THEME" > "$CURRENT_THEME_FILE"
        ;;
    "titanium-mono")
        export THEME_TYPE_SHORT="titanium-mono"
        export CURRENT_BG="titanium-mono-gojo.png"
        export CURRENT_THEME="titanium-mono"
        export LIGHT="dark"
        echo "$CURRENT_BG" > "$CURRENT_BG_FILE"
        echo "$CURRENT_THEME" > "$CURRENT_THEME_FILE"
        ;;
    "solarized-dark")
        export THEME_TYPE_SHORT="solarized"
        export CURRENT_BG="solarized-dark-construction.png"
        export CURRENT_THEME="solarized-dark"
        export LIGHT="dark"
        echo "$CURRENT_BG" > "$CURRENT_BG_FILE"
        echo "$CURRENT_THEME" > "$CURRENT_THEME_FILE"
        ;;
    "solarized-light")
        export THEME_TYPE_SHORT="solarized"
        export CURRENT_BG="solarized-light-post-modern.png"
        export CURRENT_THEME="solarized-light"
        export LIGHT="light"
        echo "$CURRENT_BG" > "$CURRENT_BG_FILE"
        echo "$CURRENT_THEME" > "$CURRENT_THEME_FILE"
        ;;
    *)
        echo "Unsupported operation: $1"
        exit 1
        ;;
esac

#case "$2" in
#    "bg")
#        ;;
#    "-")
#        echo "Ignoring \$2 arg, using \$3 is now undefined behavior"
#        ;;
#    *)
#        echo "Unsupported operation: $2"
#        exit 1
#            ;;
#esac

create_name() {
	export NAME_FILE="$SWWW_DIR/current/name"
	if [[ ! -f "$NAME_FILE" ]]; then
		touch "$NAME_FILE"
	fi

	# empty the file for new text
	echo -n > $NAME_FILE
	echo "$CURRENT_BG" > $NAME_FILE
}

set_gtk() {
    if [[ "$LIGHT" == "dark" ]]; then THEME="Adwaita-dark"; fi
    if [[ "$LIGHT" == "light" ]]; then THEME="Adwaita"; fi

    sed -i 's|^gtk-theme.*|gtk-theme='${THEME}'|' ~/.local/share/nwg-look/gsettings
    nwg-look -a
}

set_bg() {
    create_name
    # Check if the program is running
    if pgrep "swww-deamon" >/dev/null; then
        swww init
    fi

    echo $CURRENT_BG

    swww img "$HOME/.config/swww/walls/$CURRENT_BG" \
        --transition-bezier .6,.94,.86,.23\
        --transition-type "grow" \
        --transition-duration 1 \
        --transition-fps 144 \
        --invert-y \
        --transition-pos "2502, 1410"
}

kitty_trans() {
    local RULE="$(sed -n '1p' $HOME/.config/kitty/rules/${LIGHT})"
    sed -i 's|^background_opacity.*|'"${RULE}"'|' $HOME/.config/kitty/kitty.conf
}

reload_configs() {
    touch ~/.config/hypr/hyprland.conf
    pkill -9 dunst
    dunst & disown

    # kitty kitty kitty
    sleep 1
    kill -SIGUSR1 $(pidof kitty)

    sleep .6
    set_gtk
}

colorize_wofi() {
    sed -i -e '/@define-color base/s: .*;: base '"$(awk '/@define-color base/ {print $NF}' ~/.config/wofi/themes/${CURRENT_THEME}.css)"':' \
        -e '/@define-color surface/s: .*;: surface '"$(awk '/@define-color surface/ {print $NF}' ~/.config/wofi/themes/${CURRENT_THEME}.css)"':' \
        -e '/@define-color overlay/s: .*;: overlay '"$(awk '/@define-color overlay/ {print $NF}' ~/.config/wofi/themes/${CURRENT_THEME}.css)"':' \
        -e '/@define-color muted/s: .*;: muted '"$(awk '/@define-color muted/ {print $NF}' ~/.config/wofi/themes/${CURRENT_THEME}.css)"':' \
        -e '/@define-color subtle/s: .*;: subtle '"$(awk '/@define-color subtle/ {print $NF}' ~/.config/wofi/themes/${CURRENT_THEME}.css)"':' \
        -e '/@define-color text/s: .*;: text '"$(awk '/@define-color text/ {print $NF}' ~/.config/wofi/themes/${CURRENT_THEME}.css)"':' \
        -e '/@define-color love/s: .*;: love '"$(awk '/@define-color love/ {print $NF}' ~/.config/wofi/themes/${CURRENT_THEME}.css)"':' \
        -e '/@define-color gold/s: .*;: gold '"$(awk '/@define-color gold/ {print $NF}' ~/.config/wofi/themes/${CURRENT_THEME}.css)"':' \
        -e '/@define-color rose/s: .*;: rose '"$(awk '/@define-color rose/ {print $NF}' ~/.config/wofi/themes/${CURRENT_THEME}.css)"':' \
        -e '/@define-color pine/s: .*;: pine '"$(awk '/@define-color pine/ {print $NF}' ~/.config/wofi/themes/${CURRENT_THEME}.css)"':' \
        -e '/@define-color foam/s: .*;: foam '"$(awk '/@define-color foam/ {print $NF}' ~/.config/wofi/themes/${CURRENT_THEME}.css)"':' \
        -e '/@define-color iris/s: .*;: iris '"$(awk '/@define-color iris/ {print $NF}' ~/.config/wofi/themes/${CURRENT_THEME}.css)"':'  ~/.config/wofi/style.css
}

colorize_cava() {
    local GR_1="$(sed -n '1p' $HOME/.config/cava/themes/${CURRENT_THEME})"
    local GR_2="$(sed -n '2p' $HOME/.config/cava/themes/${CURRENT_THEME})"
    local GR_3="$(sed -n '3p' $HOME/.config/cava/themes/${CURRENT_THEME})"
    local GR_4="$(sed -n '4p' $HOME/.config/cava/themes/${CURRENT_THEME})"
    local GR_5="$(sed -n '5p' $HOME/.config/cava/themes/${CURRENT_THEME})"
    local GR_6="$(sed -n '6p' $HOME/.config/cava/themes/${CURRENT_THEME})"
    local GR_7="$(sed -n '7p' $HOME/.config/cava/themes/${CURRENT_THEME})"
    local GR_8="$(sed -n '8p' $HOME/.config/cava/themes/${CURRENT_THEME})"
    # ^ im am so sorry
    sed -i 's|^gradient_color_1.*|'"${GR_1}"'|' $HOME/.config/cava/config
    sed -i 's|^gradient_color_2.*|'"${GR_2}"'|' $HOME/.config/cava/config
    sed -i 's|^gradient_color_3.*|'"${GR_3}"'|' $HOME/.config/cava/config
    sed -i 's|^gradient_color_4.*|'"${GR_4}"'|' $HOME/.config/cava/config
    sed -i 's|^gradient_color_5.*|'"${GR_5}"'|' $HOME/.config/cava/config
    sed -i 's|^gradient_color_6.*|'"${GR_6}"'|' $HOME/.config/cava/config
    sed -i 's|^gradient_color_7.*|'"${GR_7}"'|' $HOME/.config/cava/config
    sed -i 's|^gradient_color_8.*|'"${GR_8}"'|' $HOME/.config/cava/config
}

colorize_kitty() {
    local KITTY_THEME="$CURRENT_THEME"
    if [[ "$THEME_TYPE_SHORT" == "gruvdark" ]]; then KITTY_THEME="gruvbox-dark"; fi
    if [[ "$THEME_TYPE_SHORT" == "gruvlight" ]]; then KITTY_THEME="gruvbox-light"; fi

    sed -i 's|^incl.*|include ./'${KITTY_THEME}'.conf|' $HOME/.config/kitty/kitty.conf
}

colorize_tmux() {
    sed -i 's|^set -g @rose_pine_variant.*|set -g @rose_pine_variant "'${THEME_TYPE_SHORT}'" # Options are "main", "moon" or "dawn"|' $HOME/.tmux.conf
}

colorize_nvim() {
    local NVIM_THEME="$CURRENT_THEME"
    if [[ "$CURRENT_THEME" == "titanium-mono" ]]; then NVIM_THEME="monochrome"; fi
    if [[ "$CURRENT_THEME" == "gruvbox-dark"  || "$CURRENT_THEME" == "gruvbox-light" ]]; then NVIM_THEME="gruvbox"; fi
    if [[ "$CURRENT_THEME" == "solarized-dark" ]]; then NVIM_THEME="solarized"; fi
    if [[ "$CURRENT_THEME" == "solarized-light" ]]; then NVIM_THEME="solarized"; fi
    sed -i 's|^vim.cmd.*|vim.cmd.colorscheme("'${NVIM_THEME}'")|' $HOME/.config/nvim/lua/core/plugins/colorscheme.lua
    sed -i 's|^vim.opt.*|vim.opt.background = "'${LIGHT}'"|' $HOME/.config/nvim/lua/core/plugins/colorscheme.lua
}

colorize_dunst() {
    local BG="$(sed -n '1p' $HOME/.config/dunst/themes/${CURRENT_THEME})"
    local FG="$(sed -n '2p' $HOME/.config/dunst/themes/${CURRENT_THEME})"
    local BR="$(sed -n '3p' $HOME/.config/dunst/themes/${CURRENT_THEME})"
    sed -i 's|background.*|'"${BG}"'|' $HOME/.config/dunst/dunstrc
    sed -i 's|foreground.*|'"${FG}"'|' $HOME/.config/dunst/dunstrc
    sed -i 's|frame_color.*|'"${BR}"'|' $HOME/.config/dunst/dunstrc
}

colorize_waybar() {
    sed -i 's|^@import.*|@import "../../themes/'${CURRENT_THEME}'.css";|' $HOME/.config/waybar/bar/bottom/style.css
    sed -i 's|^@import.*|@import "../../themes/'${CURRENT_THEME}'.css";|' $HOME/.config/waybar/bar/top/style.css
    sed -i 's|^@import.*|@import "../../themes/'${CURRENT_THEME}'.css";|' $HOME/.config/waybar/bar/compact-bottom/style.css
    sed -i 's|^@import.*|@import "../../themes/'${CURRENT_THEME}'.css";|' $HOME/.config/waybar/bar/compact-top/style.css
    sed -i 's|^@import.*|@import "../../themes/'${CURRENT_THEME}'.css";|' $HOME/.config/waybar/bar/colorful-bottom/style.css
    sed -i 's|^@import.*|@import "../../themes/'${CURRENT_THEME}'.css";|' $HOME/.config/waybar/bar/colorful-top/style.css
}

colorize_wlogout() {
    sed -i 's|^@import.*|@import "themes/'${CURRENT_THEME}'.css";|' $HOME/.config/wlogout/style.css
}

colorize_hypr() {
    local GRAD_COL="$(sed -n '1p' $HOME/.config/hypr/themes/${CURRENT_THEME})"
    local SHAD_COL="$(sed -n '2p' $HOME/.config/hypr/themes/${CURRENT_THEME})"
    sed -i 's|^$grad_col.*|'"${GRAD_COL}"'|' $HOME/.config/hypr/hyprland.conf
    sed -i 's|^$shad_col.*|'"${SHAD_COL}"'|' $HOME/.config/hypr/hyprland.conf
}

change_theme() {
    # apps
    colorize_waybar
    colorize_wlogout
    colorize_wofi
    colorize_tmux
    colorize_nvim
    colorize_dunst
    colorize_kitty
    colorize_cava
    colorize_hypr

    # background / transparency rules
    set_bg
    kitty_trans

    # reload
    reload_configs
}

#if [ "$#" -ne 2 ]; then
#    echo "Usage: $0 <theme> <bg>"
#    exit 1
#fi

change_theme
